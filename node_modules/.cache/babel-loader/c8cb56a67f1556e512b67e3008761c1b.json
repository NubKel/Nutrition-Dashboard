{"ast":null,"code":"var _jsxFileName = \"/Users/stanyan/Desktop/nutrition-dashboard/src/component/PictureMatch/index.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PictureMatch extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.search = e => {\n      // const {keyWordElement:{value:keyWord}} = this\n      // console.log('Search正在向List传递信息!');\n      PubSub.publish('updateListState', {\n        isFirst: false,\n        isLoading: true\n      }); // axios.get(`https://api.github.com/search/users?q=${keyWord}`).then(\n      //     response => {PubSub.publish('updateListState',{isLoading:false,users:response.data.items})},\n      //     error => {PubSub.publish('updateListState',{isLoading:false,err:error.message})}\n      // )\n\n      e.preventDefault(); //获取图片文件，图片类型，图片大小\n\n      const file = e.target.files[0];\n      const type = file.type;\n      const size = file.size;\n      const regularType = ['image/png', 'image/jpg', 'image/jpeg']; //图片类型限制\n\n      if (regularType.indexOf(type.toLowerCase()) === -1) {\n        // Toast.fail('Only supports PNG images!')\n        return false;\n      } //图片大小限制\n\n\n      if (size && size > 5242880) {\n        // 5 * 1024 * 1024，size的单位是字节\n        // Toast.fail('The image size should less than 5M!')\n        return false;\n      } //图片文件转成base64格式\n\n\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onloadend = () => {\n        // setImgPreviewUrl(reader.result)\n        console.log(reader); //Base64转换成二进制\n\n        const dataURItoBlob = dataURI => {\n          const byteString = atob(dataURI.split(',')[1]);\n          const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n          const ab = new ArrayBuffer(byteString.length);\n          const ia = new Uint8Array(ab);\n\n          for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n          }\n\n          return new Blob([ab], {\n            type: mimeString\n          });\n        };\n\n        const blob = dataURItoBlob(reader.result); // const blobFile = new File([blob], 'avatar', { type: blob.type })\n\n        const form = new FormData();\n        form.append(\"file\", blob);\n        const options = {\n          method: 'POST',\n          url: 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/images/analyze',\n          headers: {\n            'content-type': 'multipart/form-data; boundary=---011000010111000001101001',\n            'x-rapidapi-host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\n            'x-rapidapi-key': 'ca34833afamsh5ac992bc1103a7fp14ff01jsne781a4ca7f2a'\n          },\n          data: form\n        };\n        axios.request(options).then(function (response) {\n          console.log(response.data);\n          PubSub.publish('updateListState', {\n            isLoading: false,\n            users: response.data\n          });\n        }).catch(function (error) {\n          console.error(error);\n        });\n      };\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-box first-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"discount card\",\n          style: {\n            '--delay': '.4s'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"select-img-input\",\n            onChange: e => this.search(e),\n            type: \"file\",\n            name: \"fileSelect\",\n            accept: \"image/*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/stanyan/Desktop/nutrition-dashboard/src/component/PictureMatch/index.jsx"],"names":["React","Component","PictureMatch","search","e","PubSub","publish","isFirst","isLoading","preventDefault","file","target","files","type","size","regularType","indexOf","toLowerCase","reader","FileReader","readAsDataURL","onloadend","console","log","dataURItoBlob","dataURI","byteString","atob","split","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","blob","result","form","FormData","append","options","method","url","headers","data","axios","request","then","response","users","catch","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nexport default class PictureMatch extends Component {\n\n  search = (e) =>{\n    // const {keyWordElement:{value:keyWord}} = this\n    // console.log('Search正在向List传递信息!');\n    PubSub.publish('updateListState',{isFirst:false,isLoading:true})\n    // axios.get(`https://api.github.com/search/users?q=${keyWord}`).then(\n    //     response => {PubSub.publish('updateListState',{isLoading:false,users:response.data.items})},\n    //     error => {PubSub.publish('updateListState',{isLoading:false,err:error.message})}\n    // )\n    e.preventDefault()\n//获取图片文件，图片类型，图片大小\n    const file = e.target.files[0]\n    const type = file.type\n    const size = file.size\n    const regularType = ['image/png', 'image/jpg', 'image/jpeg']\n//图片类型限制\n    if (regularType.indexOf(type.toLowerCase()) === -1) {\n    // Toast.fail('Only supports PNG images!')\n    return false\n    }\n//图片大小限制\n    if (size && size > 5242880) {\n    // 5 * 1024 * 1024，size的单位是字节\n    // Toast.fail('The image size should less than 5M!')\n    return false\n    }\n//图片文件转成base64格式\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onloadend = () => {\n    // setImgPreviewUrl(reader.result)\n    console.log(reader);\n    \n    //Base64转换成二进制\n    const dataURItoBlob=(dataURI)=> {\n        const byteString = atob(dataURI.split(',')[1])\n        const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\n        const ab = new ArrayBuffer(byteString.length)\n        const ia = new Uint8Array(ab)\n        for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i)\n        }\n        return new Blob([ab], { type: mimeString })\n    }\n    const blob = dataURItoBlob(reader.result)\n    // const blobFile = new File([blob], 'avatar', { type: blob.type })\n\n    const form = new FormData();\n    form.append(\"file\" , blob);\n\n    const options = {\n    method: 'POST',\n    url: 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/images/analyze',\n    headers: {\n        'content-type': 'multipart/form-data; boundary=---011000010111000001101001',\n        'x-rapidapi-host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\n        'x-rapidapi-key': 'ca34833afamsh5ac992bc1103a7fp14ff01jsne781a4ca7f2a'\n    },\n    data: form\n    };\n\n    axios.request(options).then(function (response) {\n        console.log(response.data);\n        PubSub.publish('updateListState',{isLoading:false,users:response.data})\n    }).catch(function (error) {\n        console.error(error);\n    });\n}\n}\n\n  render() {\n    return (\n      <div>\n            {/* First Line */}\n      <div className=\"user-box first-box\">\n      <div className=\"discount card\" style={{'--delay': '.4s'}}>\n        <input\n          className='select-img-input'\n          onChange={(e) => this.search(e)}\n          type='file'\n          name='fileSelect'\n          accept='image/*'\n        />\n      </div> \n      </div>\n        </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}