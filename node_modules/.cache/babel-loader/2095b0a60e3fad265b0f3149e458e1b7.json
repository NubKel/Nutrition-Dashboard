{"ast":null,"code":"var _jsxFileName = \"/Users/stanyan/Desktop/nutrition-dashboard/src/component/PictureMatch/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MealList from './MealList';\nimport PubSub from 'pubsub-js';\nimport axios from 'axios';\nimport './recipe.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Recipe() {\n  _s();\n\n  const [mealData, setMealData] = useState(null);\n  const [calories, setCalories] = useState(2000);\n\n  function handleChange(e) {\n    setCalories(e.target.value);\n  }\n\n  function getMealData() {\n    fetch(`https://api.spoonacular.com/mealplanner/generate?apiKey=5f2dde49cbcd41c4b7196d2f87214526&timeFrame=day&targetCalories=${calories}`).then(response => response.json()).then(data => {\n      setMealData(data);\n      console.log(data);\n    }).catch(() => {\n      console.log('error');\n    });\n  }\n\n  search = e => {\n    // const {keyWordElement:{value:keyWord}} = this\n    // console.log('Search正在向List传递信息!');\n    PubSub.publish('updateListState', {\n      isFirst: false,\n      isLoading: true\n    }); // axios.get(`https://api.github.com/search/users?q=${keyWord}`).then(\n    //     response => {PubSub.publish('updateListState',{isLoading:false,users:response.data.items})},\n    //     error => {PubSub.publish('updateListState',{isLoading:false,err:error.message})}\n    // )\n\n    e.preventDefault(); //获取图片文件，图片类型，图片大小\n\n    const file = e.target.files[0];\n    const type = file.type;\n    const size = file.size;\n    const regularType = ['image/png', 'image/jpg', 'image/jpeg']; //图片类型限制\n\n    if (regularType.indexOf(type.toLowerCase()) === -1) {\n      // Toast.fail('Only supports PNG images!')\n      return false;\n    } //图片大小限制\n\n\n    if (size && size > 5242880) {\n      // 5 * 1024 * 1024，size的单位是字节\n      // Toast.fail('The image size should less than 5M!')\n      return false;\n    } //图片文件转成base64格式\n\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      // setImgPreviewUrl(reader.result)\n      console.log(reader); //Base64转换成二进制\n\n      const dataURItoBlob = dataURI => {\n        const byteString = atob(dataURI.split(',')[1]);\n        const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n        const ab = new ArrayBuffer(byteString.length);\n        const ia = new Uint8Array(ab);\n\n        for (let i = 0; i < byteString.length; i++) {\n          ia[i] = byteString.charCodeAt(i);\n        }\n\n        return new Blob([ab], {\n          type: mimeString\n        });\n      };\n\n      const blob = dataURItoBlob(reader.result); // const blobFile = new File([blob], 'avatar', { type: blob.type })\n\n      const form = new FormData();\n      form.append(\"file\", blob);\n      const options = {\n        method: 'POST',\n        url: 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/images/analyze',\n        headers: {\n          'content-type': 'multipart/form-data; boundary=---011000010111000001101001',\n          'x-rapidapi-host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\n          'x-rapidapi-key': 'ca34833afamsh5ac992bc1103a7fp14ff01jsne781a4ca7f2a'\n        },\n        data: form\n      };\n      axios.request(options).then(function (response) {\n        console.log(response.data);\n        PubSub.publish('updateListState', {\n          isLoading: false,\n          users: response.data\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"discount card\",\n        style: {\n          '--delay': '.4s'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"controls\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Calories (e.g 2000)\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getMealData,\n          children: \"Get Daily Meal Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"select-img-input\",\n          onChange: e => this.search(e),\n          type: \"file\",\n          name: \"fileSelect\",\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), mealData && /*#__PURE__*/_jsxDEV(MealList, {\n          mealData: mealData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Recipe, \"SSisdXaWkjJV03/o0MSkrYDdHSc=\");\n\n_c = Recipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/stanyan/Desktop/nutrition-dashboard/src/component/PictureMatch/index.jsx"],"names":["React","useState","MealList","PubSub","axios","Recipe","mealData","setMealData","calories","setCalories","handleChange","e","target","value","getMealData","fetch","then","response","json","data","console","log","catch","search","publish","isFirst","isLoading","preventDefault","file","files","type","size","regularType","indexOf","toLowerCase","reader","FileReader","readAsDataURL","onloadend","dataURItoBlob","dataURI","byteString","atob","split","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","blob","result","form","FormData","append","options","method","url","headers","request","users","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport MealList from './MealList';\nimport PubSub from 'pubsub-js'\nimport axios from 'axios'\nimport './recipe.css'\n\nexport default function Recipe() {\n  const [mealData, setMealData] = useState(null);\n  const [calories, setCalories] = useState(2000);\n\n  function handleChange(e) {\n    setCalories(e.target.value);\n  }\n\n  function getMealData() {\n    fetch(\n      `https://api.spoonacular.com/mealplanner/generate?apiKey=5f2dde49cbcd41c4b7196d2f87214526&timeFrame=day&targetCalories=${calories}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setMealData(data);\n        console.log(data);\n      })\n      .catch(() => {\n        console.log('error');\n      })\n  }\n\n  search = (e) =>{\n    // const {keyWordElement:{value:keyWord}} = this\n    // console.log('Search正在向List传递信息!');\n    PubSub.publish('updateListState',{isFirst:false,isLoading:true})\n    // axios.get(`https://api.github.com/search/users?q=${keyWord}`).then(\n    //     response => {PubSub.publish('updateListState',{isLoading:false,users:response.data.items})},\n    //     error => {PubSub.publish('updateListState',{isLoading:false,err:error.message})}\n    // )\n    e.preventDefault()\n//获取图片文件，图片类型，图片大小\n    const file = e.target.files[0]\n    const type = file.type\n    const size = file.size\n    const regularType = ['image/png', 'image/jpg', 'image/jpeg']\n//图片类型限制\n    if (regularType.indexOf(type.toLowerCase()) === -1) {\n    // Toast.fail('Only supports PNG images!')\n    return false\n    }\n//图片大小限制\n    if (size && size > 5242880) {\n    // 5 * 1024 * 1024，size的单位是字节\n    // Toast.fail('The image size should less than 5M!')\n    return false\n    }\n//图片文件转成base64格式\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onloadend = () => {\n    // setImgPreviewUrl(reader.result)\n    console.log(reader);\n    \n    //Base64转换成二进制\n    const dataURItoBlob=(dataURI)=> {\n        const byteString = atob(dataURI.split(',')[1])\n        const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\n        const ab = new ArrayBuffer(byteString.length)\n        const ia = new Uint8Array(ab)\n        for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i)\n        }\n        return new Blob([ab], { type: mimeString })\n    }\n    const blob = dataURItoBlob(reader.result)\n    // const blobFile = new File([blob], 'avatar', { type: blob.type })\n\n    const form = new FormData();\n    form.append(\"file\" , blob);\n\n    const options = {\n    method: 'POST',\n    url: 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/images/analyze',\n    headers: {\n        'content-type': 'multipart/form-data; boundary=---011000010111000001101001',\n        'x-rapidapi-host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\n        'x-rapidapi-key': 'ca34833afamsh5ac992bc1103a7fp14ff01jsne781a4ca7f2a'\n    },\n    data: form\n    };\n\n    axios.request(options).then(function (response) {\n        console.log(response.data);\n        PubSub.publish('updateListState',{isLoading:false,users:response.data})\n    }).catch(function (error) {\n        console.error(error);\n    });\n}\n}\n\n  return  <div>\n            {/* First Line */}\n            <div className=\"user-box\">\n              <div className=\"discount card\" style={{'--delay': '.4s'}}>\n                <section className='controls'>\n                  <input type=\"number\" placeholder='Calories (e.g 2000)' onChange={handleChange} />\n                </section>\n                <button onClick={getMealData}>Get Daily Meal Plan</button>\n                <input\n                            className='select-img-input'\n                            onChange={(e) => this.search(e)}\n                            type='file'\n                            name='fileSelect'\n                            accept='image/*'\n                        />\n                {mealData && <MealList mealData={mealData} />}\n              </div> \n            </div>\n          </div>\n}\n      \n    "]},"metadata":{},"sourceType":"module"}